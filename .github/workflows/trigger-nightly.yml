name: Trigger Nightly

on:
  schedule:
    - cron: "0 1 * * *"

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2

      - name: Print latest commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: Check whether latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: |
          sha=$(git rev-list --after="24 hours" ${{ github.sha }})
          if test -z $sha
          then
            echo "should_run=false" >> $GITHUB_ENV
          else
            echo "should_run=true" >> $GITHUB_ENV
          fi

  nightly:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    name: Nightly
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        run: |
          cd ./releases
          go run main.go -package github.com/reaper47/recipya -tag nightly

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: nightly
          prerelease: true
          title: Nightly
          files: ./releases/nightly/*.zip

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: reaper99/recipya@nightly

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./containers/Dockerfile
          push: true
          tags: reaper99/recipya:nightly
          labels: ${{ steps.meta.outputs.labels }}

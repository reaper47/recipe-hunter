name: Publish Docker image

# Running when a tag with the pattern below is pushed
on:
  push:
    tags:
      # SemVer (https://semver.org/), but prefixed with `v` and only with digits
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  # Push to the GitHub Packages registry
  REGISTRY: ghcr.io
  # Name the Docker image after the GitHub repository
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish_docker_image:
    name: Publish Docker image
    runs-on: ubuntu-24.04
    # Set the permissions granted to the GITHUB_TOKEN for the actions in this job
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx for multi-platform builds
        uses: docker/setup-buildx-action@v3

      # Log in to the GitHub Packages registry. Once published, the Docker image is scoped to the account defined here.
      # https://github.com/docker/login-action
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract tags and labels that will be applied to the specified image.
      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          # Provide the base name for the tags and labels
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build the Docker image, and if this succeeds, publish it to the GitHub Packages registry.
      # https://github.com/docker/build-push-action
      - name: Build and publish Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          # From the repository's root...
          context: .
          # ...build this Dockerfile...
          file: ./deploy/Dockerfile
          # ...for the following platforms
          platforms: linux/amd64,linux/arm64
          push: true
          # Use the `tags` and `labels` parameters to tag and label the Docker image with the output from the "meta" step above
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Generate an artifact attestation for the Docker image, which is an unforgeable statement about where and how it was built.
      # This increases supply chain security for image consumers.
      # Details at https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations/using-artifact-attestations-to-establish-provenance-for-builds
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

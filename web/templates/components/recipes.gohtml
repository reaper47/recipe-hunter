{{define "add-ingredient"}}
    <li class="pb-2">
        <label>
            <input type="text" name="ingredient-{{.}}" placeholder="Ingredient #{{.}}" required
                   {{if gt . 1}}autofocus{{end}}
                   class="w-8/12 py-1 pl-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-900 dark:border-none dark:text-gray-200"
                   _="on keydown if event.key is 'Enter'
                        then halt the event then get next <button/> from the parentElement of me
                        then call htmx.trigger(it, 'click')">
        </label>
        <button type="button"
                class="w-10 h-10 text-center bg-green-300 border border-gray-800 rounded-lg md:w-7 md:h-7 hover:bg-green-600 hover:text-white center dark:bg-green-500"
                title="Shortcut: Enter"
                hx-post="/recipes/add/manual/ingredient"
                hx-target="#ingredients-list"
                hx-swap="beforeend"
                hx-include="[name^='ingredient']">
            +
        </button>
        <button type="button"
                class="delete-button w-10 h-10 bg-red-300 border border-gray-800 rounded-lg md:w-7 md:h-7 hover:bg-red-600 hover:text-white center dark:bg-red-500"
                hx-target="#ingredients-list"
                hx-post="/recipes/add/manual/ingredient/{{.}}"
                hx-include="[name^='ingredient']">
            -
        </button>
        <div class="inline-block h-4 cursor-move handle">
            <svg xmlns="http://www.w3.org/2000/svg" class="md:w-4 md:h-4 w-7 h-7" fill="none"
                 viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"/>
            </svg>
        </div>
    </li>
{{end}}

{{define "add-instruction"}}
    <li class="pt-2 md:pl-0">
        <div class="flex">
            <label class="w-[95%]">
                <textarea required name="instruction-{{.}}" rows="3"
                          {{if gt . 1}}autofocus{{end}}
                          class="w-[97%] border border-gray-300 pl-1 dark:bg-gray-900 dark:border-none"
                          placeholder="Instruction #{{.}}"
                          _="on keydown if event.ctrlKey and event.key === 'Enter'
                            then halt the event
                            then get next <div/> from the parentElement of me
                            then get first <button/> in it
                            then call htmx.trigger(it, 'click')"></textarea>
            </label>
            <div class="grid">
                <div class="h-4 cursor-move handle grid place-content-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="md:w-4 md:h-4 w-7 h-7" fill="none"
                         viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"/>
                    </svg>
                </div>
                <button type="button"
                        class="md:w-7 md:h-7 md:right-auto w-10 h-10 text-center bg-green-300 border border-gray-800 rounded-lg hover:bg-green-600 hover:text-white center dark:bg-green-500"
                        title="Shortcut: CTRL + Enter"
                        hx-post="/recipes/add/manual/instruction"
                        hx-target="#instructions-list"
                        hx-swap="beforeend"
                        hx-include="[name^='instruction']">
                    +
                </button>
                <button type="button"
                        class="delete-button w-10 h-10 md:w-7 md:h-7 bg-red-300 border border-gray-800 rounded-lg top-3 hover:bg-red-600 hover:text-white center dark:bg-red-500"
                        hx-target="#instructions-list"
                        hx-post="/recipes/add/manual/instruction/{{.}}"
                        hx-include="[name^='instruction']">
                    -
                </button>
            </div>
        </div>
    </li>
{{end}}

{{define "add-recipe"}}
    <title hx-swap-oob="true">Add Recipe | Recipya</title>

    <div class="grid w-full h-full grid-cols-1 gap-4 p-4 md:grid-cols-2 md:grid-rows-2 xl:m-auto xl:max-w-6xl md:grid-flow-col">
        <div class="shadow-lg rounded-xl h-96 dark:shadow-none dark:bg-gray-600">
            <img class="object-cover w-full h-40 rounded-t-xl" src="/static/img/recipes-new/manual.webp"
                 alt="Writing on a piece of paper with a traditional pen."/>
            <div class="h-40 px-6 py-4">
                <div class="mb-2 text-xl font-semibold">Manual</div>
                <p>Add a new recipe by filling out its content manually.</p>
            </div>
            <hr class="dark:border dark:border-gray-800">
            <div class="px-6 pt-4 pb-2">
                <button class="w-full border-2 border-gray-800 rounded-lg hover:bg-gray-800 hover:text-white center"
                        hx-get="/recipes/add/manual" hx-target="#content" hx-push-url="true">
                    Fill In
                </button>
            </div>
        </div>

        <div class="shadow-lg rounded-xl h-96 dark:shadow-none dark:bg-gray-600">
            <img class="object-cover w-full h-40 rounded-t-xl" src="/static/img/recipes-new/import.webp"
                 alt="Writing on a piece of paper with a traditional pen."/>
            <div class="h-40 px-6 py-4">
                <div class="mb-2 text-xl font-semibold">Website</div>
                <p>
                    Fetch a recipe from one of the
                    <button id="search-button" class="underline"
                            hx-get="/recipes/supported-websites"
                            hx-target="#search-results"
                            onclick="document.querySelector('#supported-websites-dialog').showModal()"
                    >
                        supported
                    </button>
                    websites.
                </p>
            </div>
            <hr class="dark:border dark:border-gray-800">
            <div class="px-6 pt-4 pb-2">
                <button class="w-full border-2 border-gray-800 rounded-lg hover:bg-gray-800 hover:text-white center"
                        hx-target="#content"
                        hx-push-url="/recipes/add/unsupported-website"
                        hx-prompt="Enter the recipe's URL"
                        hx-post="/recipes/add/website"
                        hx-indicator="#fullscreen-loader">
                    Fetch
                </button>
            </div>
        </div>

        <dialog id="supported-websites-dialog" class="p-4 h-2/3 dark:bg-gray-600 rounded-lg">
            <h3 class="flex justify-between items-center mb-1 dark:text-gray-200">
                <label class="w-11/12">
                    <input class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900"
                           type="search" name="search" placeholder="Search a website" autocomplete="off"
                           _="on input
                            show <tbody>tr/> in next <table/>
                            when its textContent.toLowerCase() contains my value.toLowerCase()">
                </label>
                <button type="button" class="hover:bg-gray-800 hover:text-white px-2 border rounded"
                        onclick="document.querySelector('#supported-websites-dialog').close()">
                    X
                </button>
            </h3>

            <table class="border-collapse mt-2 dark:text-gray-200">
                <thead class="dark:text-gray-900">
                <tr class="bg-blue-100 text-center">
                    <th class="border px-4 py-1 w-4 dark:border-gray-800">Number</th>
                    <th class="border px-4 py-1 w-72">Website</th>
                </tr>
                </thead>
                <tbody id="search-results"></tbody>
            </table>
        </dialog>

        <div class="shadow-lg rounded-xl h-96 dark:shadow-none dark:bg-gray-600">
            <img class="object-cover w-full h-40 rounded-t-xl" src="/static/img/recipes-new/camera.webp"
                 alt="Writing on a piece of paper with a traditional pen."/>
            <div class="h-40 px-6 py-4">
                <div class="mb-2 text-xl font-semibold">Scan</div>
                <p>
                    Upload an image of the recipe you want to add or take a picture using
                    your device's camera.
                </p>
            </div>
            <hr class="dark:border dark:border-gray-800">
            <div class="px-6 pt-4 pb-2">
                <button class="w-full border-2 border-gray-800 rounded-lg hover:bg-gray-800 hover:text-white center"
                        hx-indicator="#fullscreen-loader"
                        onclick="openModal(event)">
                    Upload
                </button>
            </div>
        </div>

        <div class="shadow-lg rounded-xl h-96 dark:shadow-none dark:bg-gray-600">
            <img class="object-cover w-full h-40 rounded-t-xl" src="/static/img/recipes-new/schema.webp"
                 alt="Writing on a piece of paper with a traditional pen."/>
            <div class="h-40 px-6 py-4">
                <div class="mb-2 text-xl font-semibold">Import</div>
                <p>
                    Import recipes in the that adhere to the
                    <a href="https://schema.org/Recipe" target="_blank"
                       class="text-blue-600 underline hover:text-blue-800 visited:text-purple-600 dark:hover:text-blue-400 dark:visited:text-purple-400">
                        recipe schema
                    </a> standard, i.e. your Nextcloud recipes.
                </p>
            </div>
            <hr class="dark:border dark:border-gray-800">
            <div class="px-6 pt-4 pb-2">
                <button class="flex justify-center w-full border-2 border-gray-800 rounded-lg hover:bg-gray-800 hover:text-white center"
                        hx-indicator="#fullscreen-loader"
                        onclick="document.querySelector('#import-recipes-dialog').showModal()">
                    Import
                </button>
            </div>
        </div>

        <dialog id="import-recipes-dialog" class="p-4 dark:bg-gray-600 rounded-lg dark:text-gray-200">
            <h3 class="flex justify-between items-center mb-4">
                <span class="flex font-semibold">Import Recipes</span>
                <button type="button" class="hover:bg-gray-800 hover:text-white px-2 border rounded"
                        onclick="document.querySelector('#import-recipes-dialog').close()">
                    X
                </button>
            </h3>

            <form hx-post="/recipes/add/import" enctype="multipart/form-data" hx-indicator="#fullscreen-loader"
                  hx-swap="none">
                <div class="grid mb-4">
                    <label for="import-dialog-file" class="text-sm font-semibold mb-1">
                        Choose files in the .json or .zip format.
                    </label>
                    <input id="import-dialog-file" type="file" name="files" accept=".json,.zip" multiple
                           class="p-2 border border-gray-300 rounded-lg shadow focus:ring-2 focus:ring-purple-600 dark:bg-gray-900 dark:border-none">
                </div>
                <button type="submit"
                        class="w-full p-2 font-semibold text-white bg-blue-500 border rounded-lg hover:bg-blue-800 dark:border-gray-800"
                        onclick="document.querySelector('#import-recipes-dialog').close()"
                >
                    Submit
                </button>
            </form>
        </dialog>
    </div>
{{end}}

{{define "add-recipe-manual"}}
    <title hx-swap-oob="true">Manual | Recipya</title>

    <form hx-post="/recipes/add/manual" enctype="multipart/form-data"
          class="grid max-w-6xl grid-cols-6 m-auto mt-4 pb-4 dark:bg-gray-600 dark:rounded-t-lg">
        <div class="col-span-6 text-lg border border-gray-900 rounded-t-lg md:text-xl dark:border-gray-800">
            <label for="title" class="hidden"></label>
            <input type="text" name="title" id="title" placeholder="Title of the recipe*" required autocomplete="off"
                   class="w-full py-2 bg-gray-50 font-semibold text-center text-gray-600 placeholder-gray-400 rounded-t-lg dark:bg-gray-900 dark:text-gray-200">
        </div>

        <label class="grid col-span-6 place-content-center w-full h-96 border-b border-x border-black md:border-r-0 md:col-span-4 text-sm dark:border-gray-800">
            <img src="" alt="Image preview of the recipe." class="h-full">
            <span>
                <input type="file" accept="image/*" name="image" required
                       _="on dragover or dragenter halt the event then set the target's style.background to 'lightgray'
                      on dragleave or drop set the target's style.background to ''
                      on drop or change
                        make an FileReader called reader
                        then if event.dataTransfer get event.dataTransfer.files[0] else get event.target.files[0] end
                        then set {src: window.URL.createObjectURL(it)} on previous <img/>
                        then remove .hidden from next <button/>">
                <button type="button"
                        class="px-2 bg-red-300 border border-gray-800 rounded-lg hidden hover:bg-red-600 hover:text-white dark:border-gray-800 dark:bg-red-600 dark:hover:bg-red-700"
                        _="on click
                            set {value: ''} on previous <input/>
                            then set {src: ''} on previous <img/>
                            then add .hidden">
                    Delete
                </button>
            </span>
        </label>

        <div class="grid grid-flow-col col-span-6 border-b border-l border-black md:border-l md:grid-flow-row md:col-span-2 md:grid md:border-r md:border-b-0 dark:border-gray-800 print:border-b">
            <div class="col-span-2 p-2 border-r border-black md:col-span-3 md:grid md:place-items-center md:border-r-0 dark:border-gray-800">
                <label class="grid place-content-center p-2 font-medium text-sm text-gray-900 bg-blue-100 border border-blue-300 rounded-full w-fit">
                    <input type="text" list="categories" name="category"
                           class="bg-transparent text-center focus:outline-none" placeholder="Breakfast*" required>
                    <datalist id="categories">
                        {{- range .View.Categories -}}
                            <option>{{.}}</option>
                        {{- end -}}
                    </datalist>
                </label>
            </div>

            <div class="grid col-span-2 py-2 border-black place-items-center text-sm md:col-span-3 md:border-t dark:border-gray-800">
                <div>
                    <label for="yield">Yields</label>
                    <input id="yield" type="number" min="1" name="yield" value="4"
                           class="w-24 rounded bg-gray-100 p-2 dark:bg-gray-900">
                    <span>servings</span>
                </div>
            </div>

            <div class="grid col-span-2 py-2 border-black place-items-center text-sm md:col-span-3 md:border-t dark:border-gray-800">
                <label class="w-4/5">
                    <input id="source" type="text" placeholder="Source*" name="source"
                           class="w-full rounded bg-gray-100 p-2 dark:bg-gray-900" required>
                </label>
                <p class="px-4">
                    The source can be a website, name of a cookbook, from a relative or friend, a magazine, etc.
                </p>
            </div>
        </div>

        <div class="col-span-6 border-b border-x border-black md:col-span-4 dark:border-gray-800">
            <div class="flex flex-col p-2">
                <label for="description" class="text-sm font-semibold text-gray-600 dark:text-gray-200">
                    Description <sup class="text-red-600">*</sup>
                </label>
                <textarea id="description" name="description" rows="10"
                          placeholder="This Thai curry chicken will make you drool." required
                          class="p-2 border border-gray-300 rounded-t-lg dark:bg-gray-800 dark:border-none"
                ></textarea>
            </div>
        </div>

        <div class="col-span-3 border border-black md:border-l-0 md:col-span-1 dark:border-gray-800">
            <div class="inline-block min-w-full overflow-x-auto align-middle">
                <div class="overflow-hidden border-gray-200">
                    <table class="min-w-full text-xs divide-y divide-gray-200 dark:text-gray-200 dark:divide-slate-600">
                        <thead class="h-12 font-medium tracking-wider text-white bg-gray-800">
                        <tr>
                            <th scope="col" class="text-right md:text-center">
                                <p>Nutrition<br>(per 100g)</p>
                            </th>
                            <th scope="col" class="text-center">
                                <p>Amount<br>(optional)</p>
                            </th>
                        </tr>
                        </thead>
                        <tbody class="text-right text-gray-500 bg-white divide-y divide-gray-200 dark:text-gray-200 dark:bg-slate-800 dark:divide-slate-600">
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Calories:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="calories" class="hidden"></label>
                                <input type="text" id="calories" name="calories"
                                       autocomplete="off" placeholder="368kcal"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Total carbs:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="total-carbohydrates" class="hidden"></label>
                                <input type="text" id="total-carbohydrates" name="total-carbohydrates"
                                       autocomplete="off" placeholder="35g"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Sugars:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="sugars" class="hidden"></label>
                                <input type="text" id="sugars" name="sugars"
                                       autocomplete="off" placeholder="3g"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Protein:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="protein" class="hidden"></label>
                                <input type="text" id="protein" name="protein"
                                       autocomplete="off" placeholder="21g"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Total fat:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="total-fat" class="hidden"></label>
                                <input type="text" id="total-fat" name="total-fat"
                                       autocomplete="off" placeholder="15g"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Saturated fat:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="saturated-fat" class="hidden"></label>
                                <input type="text" id="saturated-fat" name="saturated-fat"
                                       autocomplete="off" placeholder="1.8g"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Cholesterol:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="cholesterol" class="hidden"></label>
                                <input type="text" id="cholesterol" name="cholesterol"
                                       autocomplete="off" placeholder="1.1mg"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Sodium:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="sodium" class="hidden"></label>
                                <input type="text" id="sodium" name="sodium"
                                       autocomplete="off" placeholder="100mg"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Fiber:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="fiber" class="hidden"></label>
                                <input type="text" id="fiber" name="fiber"
                                       autocomplete="off" placeholder="8g"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-span-3 border-b border-r border-black md:col-span-1">
            <div class="inline-block min-w-full overflow-x-auto align-middle">
                <div class="overflow-hidden border-gray-200">
                    <table id="times-table"
                           class="min-w-full text-xs divide-y divide-gray-200 dark:text-gray-200 dark:divide-slate-600">
                        <thead class="h-12 font-medium tracking-wider text-white bg-gray-800 border-l dark:border-l-gray-600">
                        <tr>
                            <th scope="col" class="text-right">Time</th>
                            <th scope="col" class="text-center">h:m:s</th>
                        </tr>
                        </thead>
                        <tbody class="text-right text-gray-500 bg-white divide-y divide-gray-200 dark:text-gray-200 dark:bg-slate-800 dark:divide-slate-600">
                        <tr>
                            <td class="py-2">Preparation:</td>
                            <td class="text-center">
                                <label for="time-preparation" class="hidden"></label>
                                <input type="text" id="time-preparation" name="time-preparation" value="00:15:00"
                                       class="w-full p-1 placeholder-gray-400 bg-white border border-gray-400 html-duration-picker dark:bg-gray-900 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2">Cooking:</td>
                            <td class="w-1/2 text-center">
                                <label for="time-cooking" class="hidden"></label>
                                <input type="text" id="time-cooking" name="time-cooking" value="00:30:00"
                                       class="w-full p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 html-duration-picker dark:bg-gray-900 dark:text-gray-200"
                                       _="on load get <button/> in #times-table then add .dark:bg-gray-200 to it">
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-span-6 py-2 border-b border-x border-black md:col-span-2 md:border-r-0">
            <fieldset class="text-center border-none">
                <legend class="pb-2 m-auto text-sm font-semibold text-gray-600 dark:text-gray-200">
                    <span class="underline">Ingredients</span> <sup class="text-red-600 no-underline">*</sup>
                </legend>
                <ol id="ingredients-list" class="pl-8 list-decimal">
                    {{template "add-ingredient" 1}}
                </ol>
            </fieldset>
        </div>
        <div class="col-span-6 py-2 pb-8 pl-2 border-b border-x border-black md:col-span-4">
            <fieldset class="text-center border-none">
                <legend class="m-auto text-sm font-semibold text-gray-600 dark:text-gray-200">
                    <span class="underline">Instructions</span> <sup class="text-red-600">*</sup>
                </legend>
                <ol id="instructions-list" class="pl-4 list-decimal">
                    {{template "add-instruction" 1}}
                </ol>
            </fieldset>
        </div>
        <button type="submit"
                class="col-span-6 p-2 font-semibold text-white bg-blue-500 hover:bg-blue-800">
            Submit
        </button>
    </form>
    {{template "load-recipes-manual-scripts"}}
{{end}}

{{define "edit-recipe"}}
    <title hx-swap-oob="true">Edit {{.View.Recipe.Name}} | Recipya</title>

    <form hx-put="/recipes/{{.View.ID}}/edit" enctype="multipart/form-data"
          class="grid max-w-6xl grid-cols-6 m-auto mt-4 pb-4 dark:bg-gray-600 dark:rounded-t-lg">
        <div class="col-span-6 text-lg border border-gray-900 rounded-t-lg md:text-xl dark:border-gray-800 relative">
            <button class="ml-2 absolute text-2xl top-[0.25rem] hover:text-red-600" title="Back to view recipe"
                    type="button"
                    _="on click if confirm('Are you sure you wish to go back? Changes will not be saved.') then call history.back()">
                &larr;
            </button>
            <label for="title" class="hidden"></label>
            <input type="text" name="title" id="title" placeholder="Title of the recipe*"
                   required autocomplete="off" value="{{.View.Recipe.Name}}"
                   class="w-full py-2 bg-gray-50 font-semibold text-center text-gray-600 placeholder-gray-400 rounded-t-lg dark:bg-gray-900 dark:text-gray-200">
        </div>

        <label class="grid col-span-6 place-content-center w-full h-96 border-b border-x border-black md:border-r-0 md:col-span-4 text-sm dark:border-gray-800">
            {{- if .View.IsUUIDValid -}}
                <img src="/data/images/{{.View.Recipe.Image}}.jpg" alt="Image preview of the recipe." class="h-full">
                <span>
                    <input type="file" accept="image/*" name="image"
                           value="/data/images/{{.View.Recipe.Image}}.jpg"
                           _="on dragover or dragenter halt the event then set the target's style.background to 'lightgray'
                          on dragleave or drop set the target's style.background to ''
                          on drop or change
                            make an FileReader called reader
                            then if event.dataTransfer get event.dataTransfer.files[0] else get event.target.files[0] end
                            then set {src: window.URL.createObjectURL(it)} on previous <img/>
                            then remove .hidden from next <button/>">
                    <button type="button"
                            class="px-2 bg-red-300 border border-gray-800 rounded-lg hover:bg-red-600 hover:text-white dark:border-gray-800 dark:bg-red-600 dark:hover:bg-red-700"
                            _="on click
                                set {value: ''} on previous <input/>
                                then set {src: ''} on previous <img/>
                                then add .hidden">
                        Delete
                    </button>
                </span>
            {{- else -}}
                <img src="" alt="Image preview of the recipe." class="h-full">
                <span>
                    <input type="file" accept="image/*" name="image"
                           _="on dragover or dragenter halt the event then set the target's style.background to 'lightgray'
                          on dragleave or drop set the target's style.background to ''
                          on drop or change
                            make an FileReader called reader
                            then if event.dataTransfer get event.dataTransfer.files[0] else get event.target.files[0] end
                            then set {src: window.URL.createObjectURL(it)} on previous <img/>
                            then remove .hidden from next <button/>">
                    <button type="button"
                            class="px-2 bg-red-300 border border-gray-800 rounded-lg hidden hover:bg-red-600 hover:text-white dark:border-gray-800 dark:bg-red-600 dark:hover:bg-red-700"
                            _="on click
                                set {value: ''} on previous <input/>
                                then set {src: ''} on previous <img/>
                                then add .hidden">
                        Delete
                    </button>
                </span>
            {{- end -}}
        </label>

        <div class="grid grid-flow-col col-span-6 border-b border-l border-black md:border-l md:grid-flow-row md:col-span-2 md:grid md:border-r md:border-b-0 dark:border-gray-800 print:border-b">
            <div class="col-span-2 p-2 border-r border-black md:col-span-3 md:grid md:place-items-center md:border-r-0 dark:border-gray-800">
                <label class="grid place-content-center p-2 font-medium text-sm text-gray-900 bg-blue-100 border border-blue-300 rounded-full w-fit">
                    <input type="text" list="categories" name="category" value="{{.View.Recipe.Category}}"
                           class="bg-transparent text-center focus:outline-none" placeholder="Breakfast*" required>
                    <datalist id="categories">
                        {{- range .View.Categories -}}
                            <option>{{.}}</option>
                        {{- end -}}
                    </datalist>
                </label>
            </div>

            <div class="grid col-span-2 py-2 border-black place-items-center text-sm md:col-span-3 md:border-t dark:border-gray-800">
                <div>
                    <label for="yield">Yields</label>
                    <input id="yield" type="number" min="1" name="yield"
                           value="{{if eq .View.Recipe.Yield 0}}4{{else}}{{.View.Recipe.Yield}}{{end}}"
                           class="w-24 rounded bg-gray-100 p-2 dark:bg-gray-900">
                    <span>servings</span>
                </div>
            </div>

            <div class="grid col-span-2 py-2 border-black place-items-center text-sm md:col-span-3 md:border-t dark:border-gray-800">
                <label class="w-4/5">
                    <input id="source" type="text" placeholder="Source*" name="source"
                           value="{{.View.Recipe.URL}}" class="w-full rounded bg-gray-100 p-2 dark:bg-gray-900">
                </label>
                <p class="px-4">
                    The source can be a website, name of a cookbook, from a relative or friend, a magazine, etc.
                </p>
            </div>
        </div>

        <div class="col-span-6 border-b border-x border-black md:col-span-4 dark:border-gray-800">
            <div class="flex flex-col p-2">
                <label for="description" class="text-sm font-semibold text-gray-600 dark:text-gray-200">
                    Description <sup class="text-red-600">*</sup>
                </label>
                <textarea id="description" name="description" rows="10"
                          placeholder="This Thai curry chicken will make you drool." required
                          class="p-2 border border-gray-300 rounded-t-lg dark:bg-gray-800 dark:border-none"
                >{{- if not (eq .View.Recipe.Description "") -}}{{.View.Recipe.Description}}{{- end -}}</textarea>
            </div>
        </div>

        <div class="col-span-3 border border-black md:border-l-0 md:col-span-1 dark:border-gray-800">
            <div class="inline-block min-w-full overflow-x-auto align-middle">
                <div class="overflow-hidden border-gray-200">
                    <table class="min-w-full text-xs divide-y divide-gray-200 dark:text-gray-200 dark:divide-slate-600">
                        <thead class="h-12 font-medium tracking-wider text-white bg-gray-800">
                        <tr>
                            <th scope="col" class="text-right md:text-center">
                                <p>Nutrition<br>(per 100g)</p>
                            </th>
                            <th scope="col" class="text-center">
                                <p>Amount<br>(optional)</p>
                            </th>
                        </tr>
                        </thead>
                        <tbody class="text-right text-gray-500 bg-white divide-y divide-gray-200 dark:text-gray-200 dark:bg-slate-800 dark:divide-slate-600">
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Calories:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="calories" class="hidden"></label>
                                <input type="text" id="calories" name="calories"
                                       autocomplete="off" placeholder="368kcal"
                                       value="{{.View.Recipe.Nutrition.Calories}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Total carbs:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="total-carbohydrates" class="hidden"></label>
                                <input type="text" id="total-carbohydrates" name="total-carbohydrates"
                                       autocomplete="off" placeholder="35g"
                                       value="{{.View.Recipe.Nutrition.TotalCarbohydrates}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Sugars:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="sugars" class="hidden"></label>
                                <input type="text" id="sugars" name="sugars"
                                       autocomplete="off" placeholder="3g"
                                       value="{{.View.Recipe.Nutrition.Sugars}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Protein:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="protein" class="hidden"></label>
                                <input type="text" id="protein" name="protein"
                                       autocomplete="off" placeholder="21g"
                                       value="{{.View.Recipe.Nutrition.Protein}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Total fat:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="total-fat" class="hidden"></label>
                                <input type="text" id="total-fat" name="total-fat"
                                       autocomplete="off" placeholder="15g"
                                       value="{{.View.Recipe.Nutrition.TotalFat}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Saturated fat:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="saturated-fat" class="hidden"></label>
                                <input type="text" id="saturated-fat" name="saturated-fat"
                                       autocomplete="off" placeholder="1.8g"
                                       value="{{.View.Recipe.Nutrition.SaturatedFat}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Cholesterol:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="cholesterol" class="hidden"></label>
                                <input type="text" id="cholesterol" name="cholesterol"
                                       autocomplete="off" placeholder="1.1mg"
                                       value="{{.View.Recipe.Nutrition.Cholesterol}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2 dark:border-gray-800">
                                <p>Sodium:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="sodium" class="hidden"></label>
                                <input type="text" id="sodium" name="sodium"
                                       autocomplete="off" placeholder="100mg"
                                       value="{{.View.Recipe.Nutrition.Sodium}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr>
                            <td class="py-2 dark:border-gray-800">
                                <p>Fiber:</p>
                            </td>
                            <td class="text-center dark:border-gray-800">
                                <label for="fiber" class="hidden"></label>
                                <input type="text" id="fiber" name="fiber"
                                       autocomplete="off" placeholder="8g"
                                       value="{{.View.Recipe.Nutrition.Fiber}}"
                                       class="w-3/4 p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-800 dark:text-gray-200">
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-span-3 border-b border-r border-black md:col-span-1">
            <div class="inline-block min-w-full overflow-x-auto align-middle">
                <div class="overflow-hidden border-gray-200">
                    <table id="times-table"
                           class="min-w-full text-xs divide-y divide-gray-200 dark:text-gray-200 dark:divide-slate-600">
                        <thead class="h-12 font-medium tracking-wider text-white bg-gray-800 border-l dark:border-l-gray-600">
                        <tr>
                            <th scope="col" class="text-right">Time</th>
                            <th scope="col" class="text-center">h:m:s</th>
                        </tr>
                        </thead>
                        <tbody class="text-right text-gray-500 bg-white divide-y divide-gray-200 dark:text-gray-200 dark:bg-slate-800 dark:divide-slate-600">
                        <tr>
                            <td class="py-2">Preparation:</td>
                            <td class="text-center">
                                <label for="time-preparation" class="hidden"></label>
                                <input type="text" id="time-preparation" name="time-preparation"
                                       value="{{if .View.FormattedTimes.PrepEdit}}{{.View.FormattedTimes.PrepEdit}}{{else}}00:15:00{{end}}"
                                       class="w-full p-1 placeholder-gray-400 bg-white border border-gray-400 html-duration-picker dark:bg-gray-900 dark:text-gray-200">
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2">Cooking:</td>
                            <td class="w-1/2 text-center">
                                <label for="time-cooking" class="hidden"></label>
                                <input type="text" id="time-cooking" name="time-cooking"
                                       value="{{if .View.FormattedTimes.CookEdit}}{{.View.FormattedTimes.CookEdit}}{{else}}00:30:00{{end}}"
                                       class="w-full p-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 html-duration-picker dark:bg-gray-900 dark:text-gray-200"
                                       _="on load get <button/> in #times-table then add .dark:bg-gray-200 to it">
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-span-6 py-2 border-b border-x border-black md:col-span-2 md:border-r-0">
            <fieldset class="text-center border-none">
                <legend class="pb-2 m-auto text-sm font-semibold text-gray-600 dark:text-gray-200">
                    <span class="underline">Ingredients</span> <sup class="text-red-600 no-underline">*</sup>
                </legend>
                <ol id="ingredients-list" class="pl-8 list-decimal">
                    {{- if eq (len .View.Recipe.Ingredients) 0 -}}
                        {{template "add-ingredient" 1}}
                    {{- else -}}
                        {{$inc := .View.Inc}}
                        {{ range $i, $v := .View.Recipe.Ingredients }}
                            {{$num := call $inc $i}}
                            <li class="pb-2">
                                <label>
                                    <input type="text" name="ingredient-{{$num}}" placeholder="Ingredient #{{$num}}"
                                           required
                                           class="w-8/12 py-1 pl-1 text-gray-600 placeholder-gray-400 bg-white border border-gray-400 dark:bg-gray-900 dark:border-none dark:text-gray-200"
                                           value="{{$v}}"
                                           _="on keydown if event.key is 'Enter'
                                                then halt the event then get next <button/> from the parentElement of me
                                                then call htmx.trigger(it, 'click')">
                                </label>
                                <button type="button"
                                        class="w-10 h-10 text-center bg-green-300 border border-gray-800 rounded-lg md:w-7 md:h-7 hover:bg-green-600 hover:text-white center dark:bg-green-500"
                                        title="Shortcut: Enter"
                                        hx-post="/recipes/add/manual/ingredient"
                                        hx-target="#ingredients-list"
                                        hx-swap="beforeend"
                                        hx-include="[name^='ingredient']">
                                    +
                                </button>
                                <button type="button"
                                        class="delete-button w-10 h-10 bg-red-300 border border-gray-800 rounded-lg md:w-7 md:h-7 hover:bg-red-600 hover:text-white center dark:bg-red-500"
                                        hx-target="#ingredients-list"
                                        hx-post="/recipes/add/manual/ingredient/{{$num}}"
                                        hx-include="[name^='ingredient']">
                                    -
                                </button>
                                <div class="inline-block h-4 cursor-move handle">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="md:w-4 md:h-4 w-7 h-7" fill="none"
                                         viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"/>
                                    </svg>
                                </div>
                            </li>
                        {{- end -}}
                    {{- end -}}
                </ol>
            </fieldset>
        </div>
        <div class="col-span-6 py-2 pb-8 pl-2 border-b border-x border-black md:col-span-4">
            <fieldset class="text-center border-none">
                <legend class="m-auto text-sm font-semibold text-gray-600 dark:text-gray-200">
                    <span class="underline">Instructions</span> <sup class="text-red-600">*</sup>
                </legend>
                <ol id="instructions-list" class="pl-4 list-decimal">
                    {{- if eq (len .View.Recipe.Instructions) 0 -}}
                        {{template "add-instruction" 1}}
                    {{- else -}}
                        {{$inc := .View.Inc}}
                        {{ range $i, $v := .View.Recipe.Instructions }}
                            {{$num := call $inc $i}}
                            <li class="pt-2 md:pl-0">
                                <div class="flex">
                                    <label class="w-[95%]">
                                        <textarea required name="instruction-{{$num}}" rows="3"
                                                  class="w-[97%] border border-gray-300 pl-1 dark:bg-gray-900 dark:border-none"
                                                  placeholder="Instruction #{{$num}}"
                                                  _="on keydown if event.ctrlKey and event.key === 'Enter'
                                                        then halt the event
                                                        then get next <div/> from the parentElement of me
                                                        then get first <button/> in it
                                                        then call htmx.trigger(it, 'click')">{{- $v -}}</textarea>
                                    </label>
                                    <div class="grid">
                                        <div class="h-4 cursor-move handle grid place-content-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="md:w-4 md:h-4 w-7 h-7"
                                                 fill="none"
                                                 viewBox="0 0 24 24"
                                                 stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4"/>
                                            </svg>
                                        </div>
                                        <button type="button"
                                                class="md:w-7 md:h-7 md:right-auto w-10 h-10 text-center bg-green-300 border border-gray-800 rounded-lg hover:bg-green-600 hover:text-white center dark:bg-green-500"
                                                title="Shortcut: CTRL + Enter"
                                                hx-post="/recipes/add/manual/instruction"
                                                hx-target="#instructions-list"
                                                hx-swap="beforeend"
                                                hx-include="[name^='instruction']">
                                            +
                                        </button>
                                        <button type="button"
                                                class="delete-button w-10 h-10 md:w-7 md:h-7 bg-red-300 border border-gray-800 rounded-lg top-3 hover:bg-red-600 hover:text-white center dark:bg-red-500"
                                                hx-target="#instructions-list"
                                                hx-post="/recipes/add/manual/instruction/{{$num}}"
                                                hx-include="[name^='instruction']">
                                            -
                                        </button>
                                    </div>
                                </div>
                            </li>
                        {{- end -}}
                    {{- end -}}
                </ol>
            </fieldset>
        </div>
        <button type="submit" class="col-span-6 p-2 font-semibold text-white bg-blue-500 hover:bg-blue-800">
            Update
        </button>
    </form>
    {{template "load-recipes-manual-scripts"}}
{{end}}

{{define "list-recipes"}}
    <title hx-swap-oob="true">Home | Recipya</title>

    {{if .Recipes}}
        <article class="grid gap-4 p-4 text-sm grid-cols-4 md:m-auto md:max-w-7xl md:text-base md:grid-cols-10">
            {{ $funcs := .Functions}}
            {{- range .Recipes -}}
                <div class="relative col-span-2 bg-white rounded-lg shadow-lg dark:bg-neutral-700">
                    {{ $isUUIDValid := call $funcs.IsUUIDValid .Image}}
                    <img class="rounded-t-lg cursor-pointer w-full hover:opacity-80 border-b dark:border-b-gray-800 {{if not $isUUIDValid}}h-[236.8px] px-4 pt-4{{end}}"
                         src="{{if $isUUIDValid}}/data/images/{{.Image}}.jpg{{end}}"
                         alt="Image for the {{.Name}} recipe"
                         hx-get="/recipes/{{.ID}}" hx-target="#content" hx-push-url="true">
                    <div class="py-2 px-3">
                        <div class="grid grid-flow-col gap-1 pb-2">
                            <p class="font-semibold">{{.Name}}</p>
                            <span class="grid place-content-center text-xs text-center font-medium select-none p-[0.25rem] bg-indigo-700 text-white rounded-lg h-fit">
                                {{.Category}}
                            </span>
                        </div>

                        <p class="pb-8 text-justify text-sm">{{call $funcs.CutString .Description 127}}</p>

                        <button class="absolute bottom-2 border-2 border-gray-800 rounded-lg center w-[90%] hover:bg-gray-800 hover:text-white dark:border-gray-800 hover:dark:bg-neutral-600"
                           hx-get="/recipes/{{.ID}}" hx-target="#content" hx-push-url="true">
                            View
                        </button>
                    </div>
                </div>
            {{end}}
        </article>
    {{else}}
        <div class="grid place-content-center text-sm h-full text-center md:text-base">
            <p>Your recipe collection looks a bit empty at the moment.</p>
            <p>
                Why not start adding some of your favorite recipes by clicking the
                <a class="underline font-semibold cursor-pointer"
                   hx-get="/recipes/add" hx-target="#content" hx-push-url="true">
                    Add recipe
                </a> button at the top?
            </p>
        </div>
    {{end}}
{{end}}

{{define "load-recipes-manual-scripts"}}
    <script defer>
        function loadScript(url) {
            const script = document.createElement("script");
            script.src = url;
            document.body.appendChild(script);

            return new Promise((res, rej) => {
                script.onload = () => res();
                script.onerror = () => rej();
            });
        }

        loadScript("https://cdn.jsdelivr.net/npm/html-duration-picker@latest/dist/html-duration-picker.min.js")
            .then(() => HtmlDurationPicker.init())

        loadScript("https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js")
            .then(() => {
                const inputs = [
                    {name: 'ingredient', type: 'input'},
                    {name: 'instruction', type: 'textarea'},
                ];
                inputs.forEach(({name, type}) => {
                    const list = document.querySelector(`#${name}s-list`);
                    if (list) {
                        new Sortable.create(list, {
                            handle: '.handle',
                            onEnd: function () {
                                Array.from(document.querySelectorAll(`${type}[name^='${name}']`)).forEach((d, i) => {
                                    const n = i + 1;
                                    d.name = `${name}-${n}`;
                                    d.placeholder = `${name.substring(0, 1).toUpperCase() + name.substring(1)} #${n}`;

                                    const deleteButton = d.parentElement.parentElement.querySelector(".delete-button");
                                    deleteButton.setAttribute('hx-post', `/recipes/add/manual/${name}/${n}`);
                                    htmx.process(deleteButton);
                                });
                            }
                        });
                    }
                });
            });
    </script>
{{end}}

{{define "share-recipe"}}
    <div class="grid grid-flow-col gap-2">
        <label>
            <input type="url" value="{{.Content}}" class="w-full rounded-lg bg-gray-100 px-4 py-2" readonly="readonly">
        </label>
        <button class="w-24 font-semibold p-2 bg-gray-300 rounded-lg hover:bg-gray-400" title="Copy to clipboard"
                _="on click
           js
               if ('clipboard' in window.navigator) {
               	 navigator.clipboard.writeText('{{.Content}}')
               }
           end
           then put 'Copied!' into me
           then add @title='Copied to clipboard!'
           then toggle @disabled on me
           then toggle .cursor-not-allowed .bg-green-600 .text-white .hover:bg-gray-400 on me">
            Copy
        </button>
    </div>
{{end}}

{{define "unsupported-website"}}
    <title hx-swap-oob="true">Unsupported Website | Recipya</title>

    <div class="flex h-[95vh] items-center justify-center">
        <article class="p-5 max-w-sm bg-white border border-gray-200 rounded-lg shadow-md md:max-w-md">
            <h3 class="mb-2 text-2xl font-semibold tracking-tight">
                This website is not supported
            </h3>
            <p class="mb-3 text-gray-700">
                You can either request our team to support this website or go back to the previous page.
            </p>
            <form hx-post="/recipes/add/request-website" hx-target="#content" class="mt-4">
                <div class="grid grid-flow-col col-span-5 columns-4">
                    <a href="javascript:history.back()"
                       class="inline-flex items-center w-full col-span-1 p-2 font-semibold text-white bg-red-600 hover:bg-red-800">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-1" fill="none" viewBox="0 0 24 24"
                             stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                  d="M11 15l-3-3m0 0l3-3m-3 3h8M3 12a9 9 0 1118 0 9 9 0 01-18 0z"/>
                        </svg>
                        Go back
                    </a>
                    <button name="website"
                            value="{{.Scraper.UnsupportedWebsite}}"
                            class="w-full col-span-4 ml-2 p-2 font-semibold text-white bg-blue-500 hover:bg-blue-800">
                        Request
                    </button>
                </div>
            </form>
        </article>
    </div>
{{end}}

{{define "view-recipe"}}
    <title hx-swap-oob="true">{{.Title}} | Recipya</title>

    {{- if not .View.Share.IsShared -}}
        <dialog id="share-dialog" class="p-4 border-4 border-black min-w-[15rem]">
            <div id="share-dialog-result" class="pb-4"></div>
            <form method="dialog">
                <button class="w-full p-1 font-semibold text-white bg-blue-500 border-2 border-black rounded-lg hover:bg-blue-800">
                    OK
                </button>
            </form>
        </dialog>
    {{- end -}}

    <div class="grid grid-cols-6 max-w-6xl m-auto mt-4 pb-4 dark:bg-gray-600 dark:rounded-t-lg print:m-0 print:p-0">
        <div class="grid grid-cols-6 col-span-6 text-lg bg-gray-50 border border-gray-900 rounded-t-md md:text-xl dark:border-gray-800 dark:bg-gray-900 print:rounded-t-none">
            {{- if .IsAuthenticated -}}
                <div class="grid justify-start col-span-1 place-content-center print:invisible">
                    <div class="grid grid-flow-col">
                        <button class="ml-2" title="Toggle screen lock"
                                _="on load if not navigator.wakeLock hide me end
                                   on click
                                   if
                                        wakeLock wakeLock.release() then
                                        add @d='M 12.276 18.55 v -0.748 a 4.79 4.79 0 0 1 1.463 -3.458 a 5.763 5.763 0 0 0 1.804 -4.21 a 5.821 5.821 0 0 0 -6.475 -5.778 c -2.779 0.307 -4.99 2.65 -5.146 5.448 a 5.82 5.82 0 0 0 1.757 4.503 a 4.906 4.906 0 0 1 1.5 3.495 v 0.747 a 1.44 1.44 0 0 0 1.44 1.439 h 2.218 a 1.44 1.44 0 0 0 1.44 -1.439 z m -1.058 0 c 0 0.209 -0.17 0.38 -0.38 0.38 h -2.22 c -0.21 0 -0.38 -0.171 -0.38 -0.38 v -0.748 c 0 -1.58 -0.664 -3.13 -1.822 -4.254 A 4.762 4.762 0 0 1 4.98 9.863 c 0.127 -2.289 1.935 -4.204 4.205 -4.455 a 4.762 4.762 0 0 1 5.3 4.727 a 4.714 4.714 0 0 1 -1.474 3.443 a 5.853 5.853 0 0 0 -1.791 4.225 v 0.746 z M 11.45 20.51 H 8.006 a 0.397 0.397 0 1 0 0 0.795 h 3.444 a 0.397 0.397 0 1 0 0 -0.794 z M 11.847 22.162 a 0.397 0.397 0 0 0 -0.397 -0.397 H 8.006 a 0.397 0.397 0 1 0 0 0.794 h 3.444 c 0.22 0 0.397 -0.178 0.397 -0.397 z z z z z z z z M 10.986 23.416 H 8.867 a 0.397 0.397 0 1 0 0 0.794 h 1.722 c 0.22 0 0.397 -0.178 0.397 -0.397 z' to first <path/>
                                   else
                                        call initWakeLock() then
                                        add @d='M12.276 18.55v-.748a4.79 4.79 0 0 1 1.463-3.458 5.763 5.763 0 0 0 1.804-4.21 5.821 5.821 0 0 0-6.475-5.778c-2.779.307-4.99 2.65-5.146 5.448a5.82 5.82 0 0 0 1.757 4.503 4.906 4.906 0 0 1 1.5 3.495v.747a1.44 1.44 0 0 0 1.44 1.439h2.218a1.44 1.44 0 0 0 1.44-1.439zm-1.058 0c0 .209-.17.38-.38.38h-2.22c-.21 0-.38-.171-.38-.38v-.748c0-1.58-.664-3.13-1.822-4.254A4.762 4.762 0 0 1 4.98 9.863c.127-2.289 1.935-4.204 4.205-4.455a4.762 4.762 0 0 1 5.3 4.727 4.714 4.714 0 0 1-1.474 3.443 5.853 5.853 0 0 0-1.791 4.225v.746zM11.45 20.51H8.006a.397.397 0 1 0 0 .795h3.444a.397.397 0 1 0 0-.794zM11.847 22.162a.397.397 0 0 0-.397-.397H8.006a.397.397 0 1 0 0 .794h3.444c.22 0 .397-.178.397-.397zM.397 10.125h2.287a.397.397 0 1 0 0-.794H.397a.397.397 0 1 0 0 .794zM19.456 9.728a.397.397 0 0 0-.397-.397h-2.287a.397.397 0 1 0 0 .794h2.287c.22 0 .397-.178.397-.397zM9.331.397v2.287a.397.397 0 1 0 .794 0V.397a.397.397 0 1 0-.794 0zM16.045 2.85 14.43 4.465a.397.397 0 1 0 .561.561l1.617-1.617a.397.397 0 1 0-.562-.56zM5.027 14.429a.397.397 0 0 0-.56 0l-1.618 1.616a.397.397 0 1 0 .562.562l1.617-1.617a.397.397 0 0 0 0-.561zM4.466 5.027a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.56L3.41 2.848a.397.397 0 1 0-.561.561zM16.045 16.607a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.562L14.99 14.43a.397.397 0 1 0-.561.56zM10.986 23.416a.397.397 0 0 0-.397-.397H8.867a.397.397 0 1 0 0 .794h1.722c.22 0 .397-.178.397-.397z' to first <path/>
                                   end">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                                 viewBox="0 0 24 24" width="24px" height="24px" stroke="currentColor">
                                <path d="M12.276 18.55v-.748a4.79 4.79 0 0 1 1.463-3.458 5.763 5.763 0 0 0 1.804-4.21 5.821 5.821 0 0 0-6.475-5.778c-2.779.307-4.99 2.65-5.146 5.448a5.82 5.82 0 0 0 1.757 4.503 4.906 4.906 0 0 1 1.5 3.495v.747a1.44 1.44 0 0 0 1.44 1.439h2.218a1.44 1.44 0 0 0 1.44-1.439zm-1.058 0c0 .209-.17.38-.38.38h-2.22c-.21 0-.38-.171-.38-.38v-.748c0-1.58-.664-3.13-1.822-4.254A4.762 4.762 0 0 1 4.98 9.863c.127-2.289 1.935-4.204 4.205-4.455a4.762 4.762 0 0 1 5.3 4.727 4.714 4.714 0 0 1-1.474 3.443 5.853 5.853 0 0 0-1.791 4.225v.746zM11.45 20.51H8.006a.397.397 0 1 0 0 .795h3.444a.397.397 0 1 0 0-.794zM11.847 22.162a.397.397 0 0 0-.397-.397H8.006a.397.397 0 1 0 0 .794h3.444c.22 0 .397-.178.397-.397zM.397 10.125h2.287a.397.397 0 1 0 0-.794H.397a.397.397 0 1 0 0 .794zM19.456 9.728a.397.397 0 0 0-.397-.397h-2.287a.397.397 0 1 0 0 .794h2.287c.22 0 .397-.178.397-.397zM9.331.397v2.287a.397.397 0 1 0 .794 0V.397a.397.397 0 1 0-.794 0zM16.045 2.85 14.43 4.465a.397.397 0 1 0 .561.561l1.617-1.617a.397.397 0 1 0-.562-.56zM5.027 14.429a.397.397 0 0 0-.56 0l-1.618 1.616a.397.397 0 1 0 .562.562l1.617-1.617a.397.397 0 0 0 0-.561zM4.466 5.027a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.56L3.41 2.848a.397.397 0 1 0-.561.561zM16.045 16.607a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.562L14.99 14.43a.397.397 0 1 0-.561.56zM10.986 23.416a.397.397 0 0 0-.397-.397H8.867a.397.397 0 1 0 0 .794h1.722c.22 0 .397-.178.397-.397z"/>
                            </svg>
                        </button>
                        <button class="ml-2" title="Edit recipe"
                                hx-get="/recipes/{{.View.ID}}/edit"
                                hx-push-url="true"
                                hx-target="#content">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                                 viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"/>
                            </svg>
                        </button>
                    </div>
                </div>
                <h1 class="grid col-span-4 py-2 font-semibold place-content-center">{{.View.Recipe.Name}}</h1>
                <div class="grid justify-end col-span-1 place-content-center print:invisible">
                    <div class="grid grid-flow-col">
                        {{- if .View.Share.IsShared -}}
                            {{- if not .View.Share.IsFromHost -}}
                                <button class="mr-2" title="Add recipe to collection"
                                        hx-post="/recipes/{{.View.Recipe.ID}}/share/add">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600"
                                         fill="none" viewBox="0 0 24 24" width="24px" height="24px"
                                         stroke="currentColor" stroke-width="2">
                                        <circle cx="12" cy="12" r="10"/>
                                        <line x1="12" y1="8" x2="12" y2="16"/>
                                        <line x1="8" y1="12" x2="16" y2="12"/>
                                    </svg>
                                </button>
                            {{- end -}}
                        {{else}}
                            <button class="mr-2" title="Share recipe" hx-post="/recipes/{{.View.Recipe.ID}}/share"
                                    hx-target="#share-dialog-result"
                                    _="on htmx:afterRequest from me if event.detail.successful call #share-dialog.showModal()">
                                <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                                     viewBox="0 0 24 24" width="24px" height="24px" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.25"
                                          fill="currentColor"
                                          d="M 18 2 C 16.35499 2 15 3.3549904 15 5 C 15 5.1909529 15.021791 5.3771224 15.056641 5.5585938 L 7.921875 9.7207031 C 7.3985399 9.2778539 6.7320771 9 6 9 C 4.3549904 9 3 10.35499 3 12 C 3 13.64501 4.3549904 15 6 15 C 6.7320771 15 7.3985399 14.722146 7.921875 14.279297 L 15.056641 18.439453 C 15.021555 18.621514 15 18.808386 15 19 C 15 20.64501 16.35499 22 18 22 C 19.64501 22 21 20.64501 21 19 C 21 17.35499 19.64501 16 18 16 C 17.26748 16 16.601593 16.279328 16.078125 16.722656 L 8.9433594 12.558594 C 8.9782095 12.377122 9 12.190953 9 12 C 9 11.809047 8.9782095 11.622878 8.9433594 11.441406 L 16.078125 7.2792969 C 16.60146 7.7221461 17.267923 8 18 8 C 19.64501 8 21 6.6450096 21 5 C 21 3.3549904 19.64501 2 18 2 z M 18 4 C 18.564129 4 19 4.4358706 19 5 C 19 5.5641294 18.564129 6 18 6 C 17.435871 6 17 5.5641294 17 5 C 17 4.4358706 17.435871 4 18 4 z M 6 11 C 6.5641294 11 7 11.435871 7 12 C 7 12.564129 6.5641294 13 6 13 C 5.4358706 13 5 12.564129 5 12 C 5 11.435871 5.4358706 11 6 11 z M 18 18 C 18.564129 18 19 18.435871 19 19 C 19 19.564129 18.564129 20 18 20 C 17.435871 20 17 19.564129 17 19 C 17 18.435871 17.435871 18 18 18 z"/>
                                </svg>
                            </button>
                        {{- end -}}
                        <button class="mr-2" onclick="print()" title="Print recipe">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                                 viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"/>
                            </svg>
                        </button>
                        <button class="mr-2" hx-delete="/recipes/{{.View.Recipe.ID}}" hx-swap="none"
                                title="Delete recipe"
                                hx-confirm="Are you sure you wish to delete this recipe?"
                                hx-indicator="#fullscreen-loader">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                                 viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                            </svg>
                        </button>
                    </div>
                </div>
            {{- else -}}
                <div class="grid justify-start col-span-1 place-content-center print:invisible">
                    <button class="ml-2" title="Toggle screen lock"
                            _="on load if not navigator.wakeLock hide me end
                                   on click
                                   if
                                        wakeLock wakeLock.release() then
                                        add @d='M 12.276 18.55 v -0.748 a 4.79 4.79 0 0 1 1.463 -3.458 a 5.763 5.763 0 0 0 1.804 -4.21 a 5.821 5.821 0 0 0 -6.475 -5.778 c -2.779 0.307 -4.99 2.65 -5.146 5.448 a 5.82 5.82 0 0 0 1.757 4.503 a 4.906 4.906 0 0 1 1.5 3.495 v 0.747 a 1.44 1.44 0 0 0 1.44 1.439 h 2.218 a 1.44 1.44 0 0 0 1.44 -1.439 z m -1.058 0 c 0 0.209 -0.17 0.38 -0.38 0.38 h -2.22 c -0.21 0 -0.38 -0.171 -0.38 -0.38 v -0.748 c 0 -1.58 -0.664 -3.13 -1.822 -4.254 A 4.762 4.762 0 0 1 4.98 9.863 c 0.127 -2.289 1.935 -4.204 4.205 -4.455 a 4.762 4.762 0 0 1 5.3 4.727 a 4.714 4.714 0 0 1 -1.474 3.443 a 5.853 5.853 0 0 0 -1.791 4.225 v 0.746 z M 11.45 20.51 H 8.006 a 0.397 0.397 0 1 0 0 0.795 h 3.444 a 0.397 0.397 0 1 0 0 -0.794 z M 11.847 22.162 a 0.397 0.397 0 0 0 -0.397 -0.397 H 8.006 a 0.397 0.397 0 1 0 0 0.794 h 3.444 c 0.22 0 0.397 -0.178 0.397 -0.397 z z z z z z z z M 10.986 23.416 H 8.867 a 0.397 0.397 0 1 0 0 0.794 h 1.722 c 0.22 0 0.397 -0.178 0.397 -0.397 z' to first <path/>
                                   else
                                        call initWakeLock() then
                                        add @d='M12.276 18.55v-.748a4.79 4.79 0 0 1 1.463-3.458 5.763 5.763 0 0 0 1.804-4.21 5.821 5.821 0 0 0-6.475-5.778c-2.779.307-4.99 2.65-5.146 5.448a5.82 5.82 0 0 0 1.757 4.503 4.906 4.906 0 0 1 1.5 3.495v.747a1.44 1.44 0 0 0 1.44 1.439h2.218a1.44 1.44 0 0 0 1.44-1.439zm-1.058 0c0 .209-.17.38-.38.38h-2.22c-.21 0-.38-.171-.38-.38v-.748c0-1.58-.664-3.13-1.822-4.254A4.762 4.762 0 0 1 4.98 9.863c.127-2.289 1.935-4.204 4.205-4.455a4.762 4.762 0 0 1 5.3 4.727 4.714 4.714 0 0 1-1.474 3.443 5.853 5.853 0 0 0-1.791 4.225v.746zM11.45 20.51H8.006a.397.397 0 1 0 0 .795h3.444a.397.397 0 1 0 0-.794zM11.847 22.162a.397.397 0 0 0-.397-.397H8.006a.397.397 0 1 0 0 .794h3.444c.22 0 .397-.178.397-.397zM.397 10.125h2.287a.397.397 0 1 0 0-.794H.397a.397.397 0 1 0 0 .794zM19.456 9.728a.397.397 0 0 0-.397-.397h-2.287a.397.397 0 1 0 0 .794h2.287c.22 0 .397-.178.397-.397zM9.331.397v2.287a.397.397 0 1 0 .794 0V.397a.397.397 0 1 0-.794 0zM16.045 2.85 14.43 4.465a.397.397 0 1 0 .561.561l1.617-1.617a.397.397 0 1 0-.562-.56zM5.027 14.429a.397.397 0 0 0-.56 0l-1.618 1.616a.397.397 0 1 0 .562.562l1.617-1.617a.397.397 0 0 0 0-.561zM4.466 5.027a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.56L3.41 2.848a.397.397 0 1 0-.561.561zM16.045 16.607a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.562L14.99 14.43a.397.397 0 1 0-.561.56zM10.986 23.416a.397.397 0 0 0-.397-.397H8.867a.397.397 0 1 0 0 .794h1.722c.22 0 .397-.178.397-.397z' to first <path/>
                                   end">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                             viewBox="0 0 24 24" width="24px" height="24px" stroke="currentColor">
                            <path d="M12.276 18.55v-.748a4.79 4.79 0 0 1 1.463-3.458 5.763 5.763 0 0 0 1.804-4.21 5.821 5.821 0 0 0-6.475-5.778c-2.779.307-4.99 2.65-5.146 5.448a5.82 5.82 0 0 0 1.757 4.503 4.906 4.906 0 0 1 1.5 3.495v.747a1.44 1.44 0 0 0 1.44 1.439h2.218a1.44 1.44 0 0 0 1.44-1.439zm-1.058 0c0 .209-.17.38-.38.38h-2.22c-.21 0-.38-.171-.38-.38v-.748c0-1.58-.664-3.13-1.822-4.254A4.762 4.762 0 0 1 4.98 9.863c.127-2.289 1.935-4.204 4.205-4.455a4.762 4.762 0 0 1 5.3 4.727 4.714 4.714 0 0 1-1.474 3.443 5.853 5.853 0 0 0-1.791 4.225v.746zM11.45 20.51H8.006a.397.397 0 1 0 0 .795h3.444a.397.397 0 1 0 0-.794zM11.847 22.162a.397.397 0 0 0-.397-.397H8.006a.397.397 0 1 0 0 .794h3.444c.22 0 .397-.178.397-.397zM.397 10.125h2.287a.397.397 0 1 0 0-.794H.397a.397.397 0 1 0 0 .794zM19.456 9.728a.397.397 0 0 0-.397-.397h-2.287a.397.397 0 1 0 0 .794h2.287c.22 0 .397-.178.397-.397zM9.331.397v2.287a.397.397 0 1 0 .794 0V.397a.397.397 0 1 0-.794 0zM16.045 2.85 14.43 4.465a.397.397 0 1 0 .561.561l1.617-1.617a.397.397 0 1 0-.562-.56zM5.027 14.429a.397.397 0 0 0-.56 0l-1.618 1.616a.397.397 0 1 0 .562.562l1.617-1.617a.397.397 0 0 0 0-.561zM4.466 5.027a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.56L3.41 2.848a.397.397 0 1 0-.561.561zM16.045 16.607a.396.396 0 0 0 .562 0 .397.397 0 0 0 0-.562L14.99 14.43a.397.397 0 1 0-.561.56zM10.986 23.416a.397.397 0 0 0-.397-.397H8.867a.397.397 0 1 0 0 .794h1.722c.22 0 .397-.178.397-.397z"/>
                        </svg>
                    </button>
                </div>
                <h1 class="grid col-span-4 py-2 font-semibold place-content-center">{{.View.Recipe.Name}}</h1>
                <div class="grid justify-end col-span-1 place-content-center print:invisible">
                    <button class="mr-2" onclick="print()" title="Print recipe">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 hover:text-red-600" fill="none"
                             viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"/>
                        </svg>
                    </button>
                </div>
            {{- end -}}
        </div>

        <div class="w-full grid grid-flow-col col-span-6 border-b border-x border-black place-items-center md:border-r-0 md:col-span-4 md:border-b-0 dark:border-gray-800 print:hidden">
            <img id="output" class="w-full text-center h-96" alt="Image of the recipe"
                 style="object-fit: scale-down"
                 src="{{- if .View.IsUUIDValid -}}/data/images/{{.View.Recipe.Image}}.jpg{{- end -}}">
        </div>

        <div class="grid grid-flow-col col-span-6 border-b border-l border-black md:border-l md:grid-flow-row md:col-span-2 md:grid md:border-r md:border-b-0 dark:border-gray-800 print:border-b">
            <div class="col-span-2 p-2 border-r border-black md:col-span-3 md:grid md:place-items-center md:border-r-0 dark:border-gray-800">
                <span class="flex items-center justify-center p-2 font-medium text-blue-700 bg-blue-100 border border-blue-300 rounded-full md:w-1/3 dark:border-gray-800 print:border-none print:text-black">
                  <span class="text-sm font-normal leading-none">{{.View.Recipe.Category}}</span>
                </span>
            </div>

            <div class="grid col-span-2 py-2 border-black place-items-center md:col-span-3 md:border-t dark:border-gray-800">
                <p class="text-sm text-center">{{.View.Recipe.Yield}} servings</p>
            </div>

            <div class="flex items-center justify-center col-span-2 border-x border-black text-sm md:border-l-0 md:border-r-0 md:border-b md:col-span-3 md:border-t md:py-2 dark:border-gray-800">
                {{- if .View.IsURL -}}
                    <a class="p-1 border rounded-lg center hover:bg-gray-800 hover:text-white dark:border-gray-800"
                       href="{{.View.Recipe.URL}}" target="_blank">
                        Source
                    </a>
                {{- else -}}
                    <p>
                        Source: {{if .View.Recipe.URL}}{{.View.Recipe.URL}}{{else}}Unkwown{{end}}
                    </p>
                {{- end -}}
            </div>
        </div>

        <div class="col-span-6 border-b border-x border-black md:col-span-4 md:border-r-0 dark:border-gray-800 print:col-span-5 print:border-r print:border-t-0 md:border-t">
            <p class="p-2 text-sm whitespace-pre-line">{{.View.Recipe.Description}}</p>
            <div class="hidden print:block print:p-2">
                <h1 class="text-sm"><b>Nutrition Facts</b></h1>
                <p class="text-xs">
                    {{- with .View.Recipe.Nutrition -}}
                        Per 100g: {{.Calories}} calories;
                        total carbohydrates {{.TotalCarbohydrates}};
                        sugars {{.Sugars}};
                        protein {{.Protein}};
                        total fat {{.TotalFat}};
                        saturated fat {{.SaturatedFat}};
                        cholesterol {{.Cholesterol}};
                        sodium {{.Sodium}};
                        fiber {{.Fiber}}.
                    {{- end -}}
                </p>
            </div>
        </div>

        {{with .View.Recipe.Nutrition}}
            <div class="col-span-3 border-b border-x border-black md:col-span-1 dark:border-gray-800 print:hidden">
                <div class="inline-block min-w-full overflow-x-auto align-middle">
                    <div class="overflow-hidden border-gray-200">
                        <table class="min-w-full text-xs divide-y divide-gray-200 table-auto dark:text-gray-200 dark:divide-slate-600">
                            <thead class="h-12 font-medium tracking-wider text-white bg-gray-800">
                            <tr>
                                <th scope="col" class="text-right">
                                    <p class="text-center">Nutrition<br>(per 100g)</p>
                                </th>
                                <th scope="col" class="text-center">
                                    <p>Amount<br>(optional)</p>
                                </th>
                            </tr>
                            </thead>
                            <tbody class="text-right text-gray-500 bg-white divide-y divide-gray-200 dark:text-gray-200 dark:bg-slate-800 dark:divide-slate-600">
                            <tr>
                                <td class="py-2 dark:border-gray-800">
                                    <p>Calories:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .Calories ""}}-{{else}}{{.Calories}}{{end}}
                                </td>
                            </tr>
                            <tr class="bg-gray-100 dark:bg-slate-700">
                                <td class="py-2 dark:border-gray-800">
                                    <p>Total carbs:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .TotalCarbohydrates ""}}-{{else}}{{.TotalCarbohydrates}}{{end}}
                                </td>
                            </tr>
                            <tr>
                                <td class="py-2 dark:border-gray-800">
                                    <p>Sugars:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .Sugars ""}}-{{else}}{{.Sugars}}{{end}}
                                </td>
                            </tr>
                            <tr class="bg-gray-100 dark:bg-slate-700">
                                <td class="py-2 dark:border-gray-800">
                                    <p>Protein:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .Protein ""}}-{{else}}{{.Protein}}{{end}}
                                </td>
                            </tr>
                            <tr>
                                <td class="py-2 dark:border-gray-800">
                                    <p>Total fat:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .TotalFat ""}}-{{else}}{{.TotalFat}}{{end}}
                                </td>
                            </tr>
                            <tr class="bg-gray-100 dark:bg-slate-700">
                                <td class="py-2 dark:border-gray-800">
                                    <p>Saturated fat:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .SaturatedFat ""}}-{{else}}{{.SaturatedFat}}{{end}}
                                </td>
                            </tr>
                            <tr>
                                <td class="py-2 dark:border-gray-800">
                                    <p>Cholesterol:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .Cholesterol ""}}-{{else}}{{.Cholesterol}}{{end}}
                                </td>
                            </tr>
                            <tr class="bg-gray-100 dark:bg-slate-700">
                                <td class="py-2 dark:border-gray-800">
                                    <p>Sodium:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .Sodium ""}}-{{else}}{{.Sodium}}{{end}}
                                </td>
                            </tr>
                            <tr>
                                <td class="py-2 dark:border-gray-800">
                                    <p>Fiber:</p>
                                </td>
                                <td class="text-center dark:border-gray-800">
                                    {{if eq .Fiber ""}}-{{else}}{{.Fiber}}{{end}}
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        {{- end -}}

        <div class="col-span-3 border-b border-r border-black md:col-span-1 print:col-span-1">
            <div class="inline-block min-w-full overflow-x-auto align-middle">
                <div class="overflow-hidden border-gray-200">
                    <table class="min-w-full text-xs divide-y divide-gray-200 dark:text-gray-200 dark:divide-slate-600">
                        <thead class="h-12 font-medium tracking-wider text-white bg-gray-800 border-l dark:border-l-gray-600 print:h-1">
                        <tr>
                            <th scope="col" class="text-right">Time</th>
                            <th scope="col" class="text-center">h:m:s</th>
                        </tr>
                        </thead>
                        <tbody class="text-right text-gray-500 bg-white divide-y divide-gray-200 dark:text-gray-200 dark:bg-slate-800 dark:divide-slate-600">
                        <tr>
                            <td class="py-2">Preparation:</td>
                            <td class="text-center print:py-0">
                                <time datetime="{{.View.FormattedTimes.PrepDateTime}}">{{.View.FormattedTimes.Prep}}</time>
                            </td>
                        </tr>
                        <tr class="bg-gray-100 dark:bg-slate-700">
                            <td class="py-2">Cooking:</td>
                            <td class="w-1/2 text-center print:py-0">
                                <time datetime="{{.View.FormattedTimes.CookDateTime}}">{{.View.FormattedTimes.Cook}}</time>
                            </td>
                        </tr>
                        <tr class="font-semibold">
                            <td class="py-2">Total:</td>
                            <td class="w-1/2 text-center print:py-0">
                                <time datetime="{{.View.FormattedTimes.TotalDateTime}}">{{.View.FormattedTimes.Total}}</time>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="col-span-6 py-2 border-b border-x border-black md:col-span-2 md:border-r-0 dark:border-gray-800 print:hidden">
            <h2 class="pb-2 m-auto text-sm font-semibold text-center text-gray-600 underline dark:text-gray-200">
                Ingredients
            </h2>
            <ul class="grid px-6 columns-2">
                {{$len := len .View.Recipe.Ingredients}}
                {{- range $i, $e := .View.Recipe.Ingredients -}}
                    <li class="min-w-full py-2 pl-4 text-sm select-none hover:bg-gray-200 dark:hover:bg-gray-800"
                        _="on mousedown toggle .line-through then toggle @checked on first <input/> in me">
                        <label for="ingredient-{{$i}}"></label>
                        <input type="checkbox" id="ingredient-{{$i}}" class="mt-1">
                        <span class="pl-2">{{$e}}</span>
                    </li>
                {{- end -}}
            </ul>
        </div>

        <div class="col-span-6 py-2 pb-8 border-b border-x border-black rounded-bl-lg md:rounded-bl-none md:col-span-4 dark:border-gray-800 print:hidden">
            <h2 class="pb-2 m-auto text-sm font-semibold text-center text-gray-600 underline dark:text-gray-200">
                Instructions</h2>
            <ol class="grid px-6 list-decimal">
                {{$len = len .View.Recipe.Instructions}}
                {{- range $i, $e := .View.Recipe.Instructions -}}
                    <li class="min-w-full py-2 text-sm select-none hover:bg-gray-200 dark:hover:bg-gray-800"
                        _="on mousedown toggle .line-through">
                        <span class="whitespace-pre-line">{{$e}}</span>
                    </li>
                {{- end -}}
            </ol>
        </div>

        <div class="hidden print:grid col-span-6 ml-2 mt-2 mb-4">
            <h1 class="text-sm"><b>Ingredients</b></h1>
            <ol class="col-span-6 w-full"
                style="column-count: {{if gt (len .View.Recipe.Ingredients) 10}}2{{else}}1{{end}}">
                {{- range $i, $e := .View.Recipe.Ingredients -}}
                    <li class="text-sm">
                        <label>
                            <input type="checkbox">
                        </label>
                        <span class="pl-2">{{$e}}</span>
                    </li>
                {{- end -}}
            </ol>
        </div>

        <div class="hidden print:grid col-span-5">
            <h1 class="text-sm"><b>Instructions</b></h1>
            <ol class="col-span-6 list-decimal w-full ml-6"
                style="column-count: {{if gt (len .View.Recipe.Instructions) 2}}2{{else}}1{{end}}; column-gap: 2.5rem">
                {{- range $i, $e := .View.Recipe.Instructions -}}
                    <li>
                        <span class="text-sm whitespace-pre-line">{{$e}}</span>
                    </li>
                {{- end -}}
            </ol>
        </div>
    </div>
    <script>
        var wakeLock = null;
        initWakeLock();

        function initWakeLock() {
            navigator.wakeLock?.request("screen")
                .then((lock) => {
                    wakeLock = lock;
                    wakeLock.onrelease = () => {
                        wakeLock = null;
                        console.info("Screen lock deactivated.");
                    }
                    console.info("Screen lock activated.");
                })
                .catch((err) => {
                    console.log(`Screen lock error: ${err.name}, ${err.message}`)
                });
        }
    </script>
{{end}}

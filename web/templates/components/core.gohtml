{{define "head"}}
    <head>
        <title hx-swap-oob="true">{{if .Title}}{{.Title}} | {{end}}Recipya</title>
        <meta charset="UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="The ultimate recipes manager for you and your family.">
        <meta name="keywords" content="Cooking, Lifestyle, Recipes, Groceries, Fast">
        <link rel="canonical" href="https://recipes.musicavis.com/">
        <link rel="stylesheet" href="/static/css/tailwind.css">
        <link rel="stylesheet" href="/static/css/app.css">
        <link rel="icon" href="/static/favicon.ico">
        <script src="https://unpkg.com/htmx.org@1.9.6"></script>
        <script src="https://unpkg.com/hyperscript.org@0.9.11"></script>
        <script defer>
            const cookbooksPattern = new RegExp("^/cookbooks/\\d+$");
            const recipesPattern = new RegExp("^/recipes/\\d+(/edit)?$");
            const recipesSharePattern = new RegExp("^/r/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$");

            const pathsShowRecipesSidebar = [
                "/",
                "/cookbooks",
                "/recipes",
            ];

            const pathsHideAddRecipeButton = [
                "/cookbooks",
                "/settings",
                "/recipes/add",
                "/recipes/add/manual",
            ];

            function showAll() {
                showAddRecipeButton();
                showAddCookbookButton();
                showCookbookTitle();
                showRecipesSidebar();
            }

            function showAddRecipeButton() {
                const button = document.querySelector("#add-recipe");
                const isRecipe = recipesPattern.test(location.pathname) || recipesSharePattern.test(location.pathname);
                if (isRecipe ||
                    pathsHideAddRecipeButton.some(path => path === location.pathname) ||
                    cookbooksPattern.test(location.pathname)) {
                    button?.classList.add("hidden");
                } else {
                    button?.classList.remove("hidden");
                }
            }

            function showAddCookbookButton() {
                const button = document.querySelector("#add-cookbook");
                if (button) {
                    button.setAttribute("hx-target", "#content");
                    button.setAttribute("hx-swap", "innerHTML")
                    htmx.process(button);
                }

                if (location.pathname === "/cookbooks") {
                    button?.classList.remove("hidden");
                } else {
                    button?.classList.add("hidden");
                }
            }

            function showCookbookTitle() {
                const cookbookTitleDiv = document.querySelector("#content-title");
                if (cookbooksPattern.test(location.pathname)) {
                    cookbookTitleDiv?.classList.add("md:block");
                } else {
                    cookbookTitleDiv?.classList.remove("md:block");
                }
            }

            function showRecipesSidebar() {
                const sidebar = document.querySelector("#recipes-sidebar");
                if (pathsShowRecipesSidebar.includes(location.pathname) || cookbooksPattern.test(location.pathname)) {
                    sidebar?.classList.remove("hidden");
                } else {
                    sidebar?.classList.add("hidden");
                }
            }

            window.addEventListener("DOMContentLoaded", () => {
                showAll();
                document.addEventListener("htmx:pushedIntoHistory", showAll);
            });

            document.addEventListener("htmx:beforeProcessNode", () => {
                adjustAddCookbookTarget();
            });

            htmx.on('htmx:pushedIntoHistory', () => {
                showAll();
                document.addEventListener("htmx:pushedIntoHistory", showAll);
            });

            function adjustAddCookbookTarget() {
                const button = document.querySelector("#add-cookbook");
                if (button) {
                    if (document.querySelector(".cookbooks-display") === null) {
                        button.setAttribute("hx-target", "#content");
                        button.setAttribute("hx-swap", "innerHTML");
                    } else {
                        button.setAttribute("hx-target", ".cookbooks-display");
                        button.setAttribute("hx-swap", "beforeend");

                        const pagination = document.querySelector("#pagination");
                        if (pagination && pagination.querySelector("nav a:nth-last-child(2)")) {
                            button.setAttribute("hx-swap", "none");
                        }
                    }
                    htmx.process(button);
                }
            }
        </script>
    </head>
{{end}}

{{define "avatar"}}
    <div hx-get="/user-initials" hx-trigger="load" hx-target="#user-initials">
        <button id="avatar-button"
                class="items-center h-10 px-4 mr-1 text-center text-gray-800 bg-blue-200 border rounded-full"
                _="on click toggle .hidden on next <div/>">
            <span id="user-initials">A</span>
        </button>
        <div id="avatar-dropdown-container"
             class="absolute w-24 right-3 top-[3.6rem] bg-white rounded-lg hidden z-10 dark:bg-gray-900">
            <ul id="avatar-menu"
                class="before:content-[''] before:absolute before:right-2 before:top-[-9px] before:border-x-[10px] before:border-x-transparent before:border-b-[10px] before:border-b-[#333]  dark:before:border-b-[gray]">
                <li class="border-2 rounded-t-lg hover:bg-blue-100 dark:border-gray-600 dark:hover:bg-blue-600">
                    <a class="flex" href="/settings" hx-get="/settings" hx-target="#content" hx-push-url="true">
                        {{template "icon-gear"}}
                        <div class="pl-1 align-bottom">Settings</div>
                    </a>
                </li>
                <li class="border-2 hover:bg-blue-100 dark:border-gray-500 dark:hover:bg-blue-600">
                    <a href="#" class="flex">
                        {{template "icon-help"}}
                        <span class="pl-1 align-bottom">About</span>
                    </a>
                </li>
                <li class="border-2 rounded-b-lg hover:bg-blue-100 dark:border-gray-500 dark:hover:bg-blue-600">
                    <a hx-post="/auth/logout" class="flex" href="#">
                        {{template "icon-logout"}}
                        <span class="pl-1 align-bottom">Log out</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>

    <script defer>
        document.addEventListener('click', (event) => {
            const dropdownContainer = document.querySelector("#avatar-dropdown-container");
            if (dropdownContainer && !dropdownContainer.classList.contains("hidden") && !["avatar-button", "user-initials"].includes(event.target.id)) {
                dropdownContainer.classList.add("hidden");
            }
        });
    </script>
{{end}}

{{define "settings"}}
    <title hx-swap-oob="true">Settings | Recipya</title>

    <div class="grid grid-flow-col h-full" style="grid-template-columns: min-content">
        <div class="text-sm md:text-base grid bg-gray-200 max-w-[5rem] mt-[1px] dark:bg-gray-600 dark:border-r dark:border-r-gray-500"
             role="tablist">
            <button class="px-2 bg-gray-300 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-800"
                    hx-get="/settings/tabs/profile"
                    hx-target="#settings-tab-content" role="tab" aria-selected="false" aria-controls="tab-content"
                    _="on click remove .bg-gray-300 .dark:bg-gray-800 from <div[role='tablist'] button/> then add .bg-gray-300 .dark:bg-gray-800">
                Profile
            </button>
            <button class="px-2 hover:bg-gray-300 dark:hover:bg-gray-800" hx-get="/settings/tabs/recipes"
                    hx-target="#settings-tab-content"
                    role="tab" aria-selected="false" aria-controls="tab-content"
                    _="on click remove .bg-gray-300 .dark:bg-gray-800 from <div[role='tablist'] button/> then add .bg-gray-300 .dark:bg-gray-800">
                Recipes
            </button>
        </div>

        <div id="settings-tab-content" role="tabpanel"
             class="text-sm md:text-base p-4 auto-rows-min">
            {{template "settings-tabs-profile"}}
        </div>
    </div>
{{end}}

{{define "settings-tabs-profile"}}
    <div class="flex md:grid md:grid-cols-2 md:gap-4 mb-2">
        <p class="grid justify-end font-semibold">Change password:</p>
        <form class="h-fit w-fit border p-4 rounded-lg dark:border-none dark:bg-gray-600"
              hx-post="/auth/change-password"
              hx-indicator="#fullscreen-loader" hx-swap="none">
            <div class="grid mb-5">
                <div class="block">
                    <label class="font-medium" for="password-current">Current password</label>
                    <input class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900" id="password-current"
                           name="password-current" placeholder="Enter current password" required type="password"/>
                </div>

                <div class="block mt-3">
                    <label class="font-medium" for="password-new">New password</label>
                    <input class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900" id="password-new"
                           name="password-new" placeholder="Enter new password" required type="password"/>
                </div>

                <div class="block mt-3">
                    <label class="font-medium" for="password-confirm">Confirm password</label>
                    <input class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900" id="password-confirm"
                           name="password-confirm" placeholder="Retype new password" required type="password"/>
                </div>
            </div>
            <button type="submit" class="w-full p-2 font-semibold text-white bg-blue-500 rounded-lg hover:bg-blue-800">
                Update
            </button>
        </form>
    </div>
{{end}}

{{define "settings-tabs-recipes"}}
    <div class="grid grid-cols-2 gap-4 mb-2">
        <p class="text-end font-semibold select-none">Export data:</p>
        <form class="grid gap-1 grid-flow-col w-fit" hx-get="/settings/export/recipes" hx-include="select[name='type']">
            <label>
                <select required id="file-type" name="type"
                        class="bg-gray-50 border border-gray-300 rounded-lg p-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-200 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <optgroup label="Recipes">
                        <option value="json" selected>JSON</option>
                        <option value="pdf">PDF</option>
                    </optgroup>
                </select>
            </label>
            <button class="bg-white border border-gray-300 rounded-lg py-2 px-4 justify-start hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 dark:bg-gray-800 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700">
                {{template "icon-download"}}
            </button>
        </form>
    </div>
    <div class="grid grid-cols-2 gap-4 mb-2">
        <label for="systems" class="text-end font-semibold">Measurement system:</label>
        <select id="systems" name="system" hx-post="/settings/measurement-system" hx-swap="none"
                class="h-fit w-fit bg-gray-50 border border-gray-300 rounded-lg p-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-200 dark:focus:ring-blue-500 dark:focus:border-blue-500">
            {{- $selected := .Settings.UserSettings.MeasurementSystem -}}
            {{- range .Settings.MeasurementSystems -}}
                <option value="{{.}}" {{if eq . $selected}}selected{{end}}>{{.}}</option>
            {{- end -}}
        </select>
    </div>
    <div class="grid grid-cols-2 gap-4 mb-2">
        <label for="convert" class="text-end font-semibold">Convert automatically:<br>
            <span class="font-light text-sm">Convert new recipes to your preferred measurement system.</span>
        </label>
        <input type="checkbox" name="convert" id="convert"
               {{if .Settings.UserSettings.ConvertAutomatically}}checked{{end}}
               class="w-fit h-fit mt-1"
               hx-post="/settings/convert-automatically" hx-trigger="click">
    </div>
    <div class="grid grid-cols-2 gap-4 mb-2">
        <label for="integrations" class="text-end font-semibold">Integrations:<br>
            <span class="font-light text-sm">Import recipes from a selected solution.</span>
        </label>
        <div class="grid gap-1 grid-flow-col w-fit h-fit">
            <label>
                <select id="integrations" name="integrations" hx-post="/settings/measurement-system" hx-swap="none"
                        class="h-fit w-fit bg-gray-50 border border-gray-300 rounded-lg p-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-200 dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <option value="nextcloud" selected>Nextcloud</option>
                </select>
            </label>
            <button class="bg-white border border-gray-300 rounded-lg py-1 px-2 hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 dark:bg-gray-800 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                    onmousedown="document.querySelector('#integrations-nextcloud-dialog').showModal()">
                {{template "icon-download2"}}
            </button>
        </div>
    </div>

    <dialog id="integrations-nextcloud-dialog" class="p-4 dark:bg-gray-600 rounded-lg dark:text-gray-200">
        <h1 class="mb-3 text-center text-2xl font-semibold underline">Import from Nextcloud</h1>

        <form method="dialog"
              hx-post="/integrations/import/nextcloud"
              hx-swap="none"
              hx-indicator="#fullscreen-loader"
              onsubmit="document.querySelector('#integrations-nextcloud-dialog').close()">
            <div class="block">
                <label for="integrations-nextcloud-dialog-url" class="font-medium">Nextcloud URL</label>
                <input id="integrations-nextcloud-dialog-url" type="url" name="url"
                       placeholder="https://nextcloud.mydomain.com"
                       class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900">
            </div>
            <div class="block mt-3">
                <label for="integrations-nextcloud-dialog-username" class="font-medium">Username</label>
                <input id="integrations-nextcloud-dialog-username" type="text" name="username"
                       placeholder="Enter your Nextcloud username"
                       class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900">
            </div>
            <div class="block mt-3">
                <label for="integrations-nextcloud-dialog-password" class="font-medium">Password</label>
                <input id="integrations-nextcloud-dialog-password" type="password" name="password"
                       placeholder="Enter your Nextcloud password"
                       class="w-full rounded-lg bg-gray-100 px-4 py-2 dark:bg-gray-900">
            </div>
            <button class="mt-3 w-full rounded-lg bg-indigo-600 px-4 py-2 text-lg font-semibold tracking-wide text-white hover:bg-green-600">
                Import
            </button>
        </form>
    </dialog>
{{end}}
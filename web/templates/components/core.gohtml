{{define "head"}}
    <head>
        <title hx-swap-oob="true">{{if .Title}}{{.Title}} | {{end}}Recipya</title>
        <meta charset="UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="The ultimate recipes manager for you and your family.">
        <meta name="keywords" content="Cooking, Lifestyle, Recipes, Groceries, Fast">
        <link rel="canonical" href="https://recipes.musicavis.com/">
        <link rel="stylesheet" href="/static/css/tailwind.css">
        <link rel="stylesheet" href="/static/css/app.css">
        <link rel="icon" href="/static/favicon.ico">
        <script src="https://unpkg.com/htmx.org@1.9.10"></script>
        <script src="https://unpkg.com/hyperscript.org@0.9.11"></script>
        <script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>
        <script defer>
            const cookbooksPattern = new RegExp("^/cookbooks/\\d+$");
            const cookbooksSharePattern = new RegExp("^/c/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$");

            const recipesPattern = new RegExp("^/recipes/\\d+(/edit)?$");
            const recipesSharePattern = new RegExp("^/r/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$");

            const pathsShowRecipesSidebar = [
                "/",
                "/cookbooks",
                "/recipes",
            ];

            const pathsHideAddRecipeButton = [
                "/cookbooks",
                "/settings",
                "/recipes/add",
                "/recipes/add/manual",
            ];

            function showAll() {
                showAddRecipeButton();
                showAddCookbookButton();
                showCookbookTitle();
                showRecipesSidebar();
            }

            function showAddRecipeButton() {
                const isRecipe = recipesPattern.test(location.pathname) || recipesSharePattern.test(location.pathname);
                if (isRecipe ||
                    pathsHideAddRecipeButton.some(path => path === location.pathname) ||
                    cookbooksPattern.test(location.pathname) ||
                    cookbooksSharePattern.test(location.pathname)) {
                    add_recipe?.classList.add("hidden");
                } else {
                    add_recipe?.classList.remove("hidden");
                }
            }

            function showAddCookbookButton() {
                if (add_cookbook) {
                    add_cookbook.setAttribute("hx-target", "#content");
                    add_cookbook.setAttribute("hx-swap", "innerHTML")
                    htmx.process(add_cookbook);
                }

                if (location.pathname === "/cookbooks") {
                    add_cookbook?.classList.remove("hidden");
                } else {
                    add_cookbook?.classList.add("hidden");
                }
            }

            function showCookbookTitle() {
                const cookbookTitleDiv = document.querySelector("#content-title");
                if (cookbooksPattern.test(location.pathname) ||
                    cookbooksSharePattern.test(location.pathname)) {
                    cookbookTitleDiv?.classList.add("md:block");
                } else {
                    cookbookTitleDiv?.classList.remove("md:block");
                }
            }

            function showRecipesSidebar() {
                const sidebar = document.querySelector("#recipes-sidebar");
                if (pathsShowRecipesSidebar.includes(location.pathname) || cookbooksPattern.test(location.pathname)) {
                    sidebar?.classList.remove("hidden");
                } else {
                    sidebar?.classList.add("hidden");
                }

                if (recipesPattern.test(location.pathname)) {
                    desktop_nav.firstElementChild.classList.add("hidden");
                    mobile_nav.classList.add("hidden");
                } else {
                    desktop_nav.firstElementChild.classList.remove("hidden");
                    mobile_nav.classList.remove("hidden");
                }
            }

            window.addEventListener("DOMContentLoaded", () => {
                showAll();
                document.addEventListener("htmx:pushedIntoHistory", showAll);
            });

            /*document.addEventListener("htmx:beforeProcessNode", () => {
                adjustAddCookbookTarget();
            });*/

            htmx.on('htmx:pushedIntoHistory', () => {
                showAll();
                document.addEventListener("htmx:pushedIntoHistory", showAll);
            });

            function adjustAddCookbookTarget() {
                if (add_cookbook) {
                    if (document.querySelector(".cookbooks-display") === null) {
                        add_cookbook.setAttribute("hx-target", "#content");
                        add_cookbook.setAttribute("hx-swap", "innerHTML");
                    } else {
                        add_cookbook.setAttribute("hx-target", ".cookbooks-display");
                        add_cookbook.setAttribute("hx-swap", "beforeend");

                        if (pagination && pagination.querySelector("button:nth-last-child(2)")) {
                            add_cookbook.setAttribute("hx-swap", "none");
                        }
                    }
                    htmx.process(add_cookbook);
                }
            }

            function loadSortableJS() {
                return loadScript("https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js")
            }

            function loadScript(url) {
                const script = document.createElement("script");
                script.src = url;
                document.body.appendChild(script);

                return new Promise((res, rej) => {
                    script.onload = () => res();
                    script.onerror = () => rej();
                });
            }

            function downloadFile(data, filename, mime) {
                const blobURL = window.URL.createObjectURL(data);
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = blobURL;
                a.setAttribute('download', filename);
                if (typeof a.download === 'undefined') {
                    a.setAttribute('target', '_blank');
                }
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                setTimeout(() => {
                    window.URL.revokeObjectURL(blobURL);
                }, 100);
            }
        </script>
    </head>
{{end}}

{{define "about-dialog"}}
    <dialog id="about_dialog" class="modal">
        <div class="modal-box">
            <div class="overflow-x-auto">
                <table class="table table-zebra">
                    <tbody>
                    <tr>
                        <th scope="row" class="text-right">Application Name:</th>
                        <td class="">Recipya</td>
                    </tr>
                    <tr>
                        <th scope="row" class="text-right">Version:</th>
                        <td>{{.About.Version}}</td>
                    </tr>
                    <tr>
                        <th scope="row" class="text-right">Guide:</th>
                        <td>
                            <a href="/guide" hx-boost="false" class="link">Access</a>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row" class="text-right">Repository:</th>
                        <td>
                            <a href="https://github.com/reaper47/recipya" target="_blank"
                               class="link">reaper47/recipya</a>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row" class="text-right">Support Channel:</th>
                        <td>
                            <a href="https://app.element.io/#/room/#recipya:matrix.org" target="_blank" class="link">
                                Matrix Space</a>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row" class="text-right">License:</th>
                        <td>GPLv3</td>
                    </tr>
                    </tbody>
                </table>

                <button class="btn btn-neutral btn-block btn-sm rounded-t-none" onclick="about_dialog.close()">
                    Close
                </button>
            </div>
        </div>
        <div class="modal-backdrop">
            <button class="cursor-auto" onclick="about_dialog.close()"></button>
        </div>
    </dialog>
{{end}}

{{define "settings"}}
    <title hx-swap-oob="true">Settings | Recipya</title>

    <div class="grid place-content-center md:place-content-stretch md:grid-flow-col md:h-full"
         style="grid-template-columns: min-content">
        <div class="hidden md:grid text-sm md:text-base bg-gray-200 max-w-[6rem] mt-[1px] dark:bg-gray-600 dark:border-r dark:border-r-gray-500"
             role="tablist">
            {{- if not .IsAutologin -}}
                <button class="px-2 bg-gray-300 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-800"
                        hx-get="/settings/tabs/profile" hx-target="#settings-tab-content" role="tab"
                        aria-selected="false" aria-controls="tab-content"
                        _="on click remove .bg-gray-300 .dark:bg-gray-800 from <div[role='tablist'] button/> then add .bg-gray-300 .dark:bg-gray-800">
                    Profile
                </button>
            {{- end -}}
            <button class="px-2 {{if .IsAutologin}}bg-gray-300{{end}} hover:bg-gray-300 dark:hover:bg-gray-800"
                    hx-get="/settings/tabs/recipes" hx-target="#settings-tab-content"
                    role="tab" aria-selected="false" aria-controls="tab-content"
                    _="on click remove .bg-gray-300 .dark:bg-gray-800 from <div[role='tablist'] button/> then add .bg-gray-300 .dark:bg-gray-800">
                Recipes
            </button>
            <button class="px-2 hover:bg-gray-300"
                    hx-get="/settings/tabs/advanced" hx-target="#settings-tab-content"
                    role="tab" aria-selected="false" aria-controls="tab-content"
                    _="on click remove .bg-gray-300 .dark:bg-gray-800 from <div[role='tablist'] button/> then add .bg-gray-300 .dark:bg-gray-800">
                Advanced
            </button>
        </div>

        <div id="settings_bottom_tabs" class="btm-nav btm-nav-sm z-20 md:hidden"
             _="on click remove .active from <button/> in settings_bottom_tabs then add .active to event.srcElement">
            <button class="active" hx-get="/settings/tabs/profile" hx-target="#settings-tab-content">
                Profile
            </button>
            <button hx-get="/settings/tabs/recipes" hx-target="#settings-tab-content">
                Recipes
            </button>
            <button hx-get="/settings/tabs/advanced" hx-target="#settings-tab-content">
                Advanced
            </button>
        </div>

        <div id="settings-tab-content" role="tabpanel"
             class="w-[90vw] text-sm md:text-base p-4 auto-rows-min md:w-full">
            {{- if .IsAutologin -}}
                {{template "settings-tabs-recipes" .}}
            {{- else -}}
                {{template "settings-tabs-profile"}}
            {{- end -}}
        </div>
    </div>
{{end}}

{{define "settings-tabs-advanced"}}
    <div class="mb-2 md:grid md:grid-cols-2 md:gap-4">
        <p class="mb-1 font-semibold select-none md:text-end md:mb-0">Restore backup:</p>
        <form class="grid gap-1 grid-flow-col w-fit" hx-post="/settings/backups/restore"
              hx-include="select[name='date']" hx-swap="none" hx-indicator="#fullscreen-loader"
              hx-confirm="Continue with this backup? Today's data will be backed up if not already done.">
            <label>
                <select required id="file-type" name="date" class="select select-bordered select-sm">
                    {{range .Backups}}
                        <option value="{{.Value}}" selected>{{.Display}}</option>
                    {{end}}
                </select>
            </label>
            <button class="btn btn-sm btn-outline">
                {{template "icon-rocket-launch"}}
            </button>
        </form>
    </div>
{{end}}

{{define "settings-tabs-profile"}}
    <div class="mb-4 md:mb-2 md:grid md:grid-cols-2 md:gap-4">
        <p class="mb-1 font-semibold md:text-end">Change password:</p>
        <div class="card card-bordered card-compact w-96 bg-base-100 max-w-xs">
            <div class="card-body pt-2">
                <form hx-post="/auth/change-password" hx-indicator="#fullscreen-loader" hx-swap="none">
                    <label class="form-control w-full">
                        <div class="label">
                            <span class="label-text">Current password?</span>
                        </div>
                        <input type="password" placeholder="Enter current password"
                               class="input input-bordered input-sm w-full max-w-xs"
                               name="password-current" required/>
                    </label>
                    <label class="form-control w-full">
                        <div class="label">
                            <span class="label-text">New password?</span>
                        </div>
                        <input type="password" placeholder="Enter new password"
                               class="input input-bordered input-sm w-full max-w-xs"
                               name="password-new" required/>
                    </label>
                    <label class="form-control w-full">
                        <div class="label">
                            <span class="label-text">Confirm password?</span>
                        </div>
                        <input type="password" placeholder="Retype new password"
                               class="input input-bordered input-sm w-full max-w-xs"
                               name="password-confirm" required/>
                    </label>
                    <div type="submit" class="card-actions justify-end mt-2">
                        <button class="btn btn-primary btn-block btn-sm">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="mb-2 grid grid-cols-2 gap-4">
        <p class="mb-1 font-semibold md:text-end">Delete Account:<br>
            <span class="font-light text-sm">This will delete all your data.</span>
        </p>
        <button type="submit" hx-delete="/auth/user"
                hx-confirm="Are you sure you want to delete your account? This action is irreversible."
                class="btn btn-error w-28">
            Delete
        </button>
    </div>
{{end}}

{{define "settings-tabs-recipes"}}
    <div class="mb-4 md:mb-2 md:grid md:grid-cols-2 md:gap-4">
        <p class="mb-1 font-semibold md:text-end">Export data:<br>
            <span class="font-light text-sm">Download your recipes in the selected file format.</span>
        </p>
        <form class="grid gap-1 grid-flow-col w-fit" hx-get="/settings/export/recipes"
              hx-include="select[name='type']" hx-swap="none">
            <label class="form-control w-full max-w-xs">
                <select required id="file-type" name="type" class="w-fit select select-bordered select-sm">
                    <optgroup label="Recipes">
                        <option value="json" selected>JSON</option>
                        <option value="pdf">PDF</option>
                    </optgroup>
                </select>
            </label>
            <button class="btn btn-outline btn-sm">
                {{template "icon-download"}}
            </button>
        </form>
    </div>
    <div class="mb-4 md:mb-2 md:grid md:grid-cols-2 md:gap-4">
        <p class="mb-1 font-semibold md:text-end">Measurement system:</p>
        <label class="form-control w-full max-w-xs">
            <select name="system" hx-post="/settings/measurement-system" hx-swap="none"
                    class="w-fit select select-bordered select-sm">
                {{- $selected := .Settings.UserSettings.MeasurementSystem -}}
                {{- range .Settings.MeasurementSystems -}}
                    <option value="{{.}}" {{if eq . $selected}}selected{{end}}>{{.}}</option>
                {{- end -}}
            </select>
        </label>
    </div>
    <div class="flex mb-4 md:mb-2 md:grid md:grid-cols-2 md:gap-4">
        <label for="convert" class="mb-1 font-semibold md:text-end">Convert automatically:<br>
            <span class="font-light text-sm">Convert new recipes to your preferred measurement system.</span>
        </label>
        <input type="checkbox" name="convert" id="convert"
               {{if .Settings.UserSettings.ConvertAutomatically}}checked{{end}}
               class="checkbox" hx-post="/settings/convert-automatically" hx-trigger="click">
    </div>
    <div class="flex mb-4 md:mb-2 md:grid md:grid-cols-2 md:gap-4">
        <label for="calculate-nutrition" class="mb-1 font-semibold md:text-end">Calculate nutrition facts:<br>
            <span class="font-light text-sm md:max-w-96 md:inline-block">
                Calculate the nutrition facts automatically when adding a recipe.
                The processing will be done in the background.
            </span>
        </label>
        <input id="calculate-nutrition" type="checkbox" name="calculate-nutrition"
               {{if .Settings.UserSettings.CalculateNutritionFact}}checked{{end}}
               class="checkbox" hx-post="/settings/calculate-nutrition" hx-trigger="click"/>
    </div>
    <div class="md:grid md:grid-cols-2 md:gap-4">
        <label class="font-semibold md:text-end">Integrations:<br>
            <span class="font-light text-sm">Import recipes from the selected solution.</span>
        </label>
        <div class="grid gap-1 grid-flow-col w-fit h-fit mt-1 md:mt-0">
            <label class="form-control w-full max-w-xs">
                <select name="integrations" class="w-fit select select-bordered select-sm">
                    <option value="nextcloud" selected>Nextcloud</option>
                </select>
            </label>
            <button class="btn btn-outline btn-sm" onmousedown="integrations_nextcloud_dialog.showModal()">
                {{template "icon-download2"}}
            </button>
        </div>
    </div>

    <dialog id="integrations_nextcloud_dialog" class="modal">
        <div class="modal-box">
            <form method="dialog">
                <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
            </form>
            <h3 class="font-semibold underline text-center">Import from Nextcloud</h3>
            <form method="dialog" hx-post="/integrations/import/nextcloud" hx-swap="none"
                  onsubmit="integrations_nextcloud_dialog.close()">
                <label class="form-control w-full">
                    <div class="label">
                        <span class="label-text font-medium">Nextcloud URL</span>
                    </div>
                    <input type="url" name="url" placeholder="https://nextcloud.mydomain.com"
                           class="input input-bordered w-full" required>
                </label>
                <label class="form-control w-full">
                    <div class="label">
                        <span class="label-text font-medium">Username</span>
                    </div>
                    <input type="text" name="username" placeholder="Enter your Nextcloud username"
                           class="input input-bordered w-full" required>
                </label>
                <label class="form-control w-full pb-2">
                    <div class="label">
                        <span class="label-text font-medium">Password</span>
                    </div>
                    <input type="password" name="password" placeholder="Enter your Nextcloud password"
                           class="input input-bordered w-full" required>
                </label>
                <button class="btn btn-block btn-primary btn-sm mt-2">
                    Import
                </button>
            </form>
        </div>
    </dialog>
{{end}}